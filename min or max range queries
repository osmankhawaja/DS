#include<bits/stdc++.h>
using namespace std;
#define endl "\n"

const int N=1e6;
int n, q;
int seg[N];

//tc:O(n)
void build(int ind, int low, int high, int arr[])
{
    if(low == high)
    {
        seg[ind]=arr[low];
        return ;
    }
    int mid=(low+high)/2;
    build((2*ind) +1, low, mid, arr);
    build((2*ind)+2, mid+1, high, arr);

    seg[ind]=min(seg[(2*ind)+1], seg[(2*ind)+2]);
}
//tc:O(log N)
int query(int ind, int low, int high, int l, int r)
{
    //no overlap
    if(r < low || l > high) return INT_MAX;

    //complete overlap
    else if(l <= low && r >= high) return seg[ind];

    //partial overlap
    int mid=(low + high)/2;
    int left=query((2*ind)+1, low, mid, l, r);
    int right=query((2*ind)+2, mid+1, high, l, r);
    return min(left, right);
}

int main()
{
    // int n,q;
    cin>>n>>q;
    int arr[n+5];
    for(int i=0; i<n; i++) cin>>arr[i];

    build(0, 0, n-1, arr);
    while(q--)
    {
        int l,r;
        cin>>l>>r;
        cout<<query(0, 0, n-1, l-1, r-1)<<endl;
    }
}
